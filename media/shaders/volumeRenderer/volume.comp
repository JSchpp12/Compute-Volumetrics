#version 450

// layout(set = 0, binding = 0) uniform GlobalUniformBufferObject {
// 	mat4 proj;
// 	mat4 view;  
// 	mat4 inverseView; 
// 	int numLights;
// } globalUbo;

layout(set = 0, binding = 0, rgba8) uniform readonly image2D inputSceneColor; 
layout(set = 0, binding = 1, rgba8) uniform writeonly image2D outputImage; 

// layout(set = 1, binding = 0) uniform aabbInfo{
//     vec4 verts[8];
// };

// layout(set = 2, binding = 0

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in; 

void main(){
    uint target_x = (gl_LocalInvocationID.x) + ((gl_WorkGroupID.x) * 16); 
    uint target_y = (gl_LocalInvocationID.y) + ((gl_WorkGroupID.y) * 16); 

    vec4 imgColor = vec4(imageLoad(inputSceneColor, ivec2(target_x, target_y))); 
    imageStore(outputImage, ivec2(target_x, target_y), imgColor); 
}